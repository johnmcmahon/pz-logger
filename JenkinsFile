#!/usr/bin/groovy

node {
  def root = pwd()
  def mvn = tool 'M3'
  def sonarUrl = "https://sonar.gs.mil"
  def golangTool = tool 'golang_1.7'
  
  // Getting the GO environment ready along with defining GIT credentials
    stage('Setup') {
        deleteDir()
        // github is open gitlab requires credentials to clone
        if(env.GITLAB_CREDS) {
          git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}", credentialsId: "${env.GITLAB_CREDS}"
        } else {
          git url: "${env.GIT_URL}", branch: "${env.GIT_BRANCH}"
        }
        
        withEnv([
           "PATH+=${golangTool}/bin:${root}/gopath/bin",
            "GOROOT=${golangTool}",
            "GOPATH=${root}/gopath"
        ]) {
            sh """
              mkdir -p ${root}/gopath/bin ${root}/gopath/pkg ${root}/gopath/src
              go version
            """
        }
    }
    stage('Archive') {
        withEnv([
           "PATH+=${golangTool}/bin:${root}/gopath/bin",
            "GOROOT=${golangTool}",
            "GOPATH=${root}/gopath"
        ]) {
           sh """
             echo "${env.REPO_PATH}"
             go get "${env.REPO_PATH}"
             cd "\$GOPATH/src/${env.REPO_PATH}"
             
             go test -v -coverprofile=${root}/logger.cov -coverpkg ${env.REPO_PATH}/logger ${env.REPO_PATH}/logger
             go tool cover -func=${root}/logger.cov -o ${root}/logger.cov.txt

             cd ${root}

             cp \$GOPATH/bin/pz-logger ${root}/pz-logger
              tar -cvzf pz-logger.tgz \
                pz-logger \
                *.cov \
                *.cov.txt \
                glide.lock \
                glide.yaml
           """
        }
    }    
}
